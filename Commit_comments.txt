Commit #1:
1) Created Tour model with set of Business validations in Model/Tour.js file.
2) Created CRUD operation in routes/tourRoutes.js
3) Created app.js which is the file that will be hosted.


Commit #2 :
1) Created FILTERING feature in get API.
Frontend should send req.query in this format to filter data on duration and ratingsAverage : 
    '?duration=1&ratingsAverage[lte]=4.5'
2) Created SORTING feature in get API.
Frontend should send req.query in this format for ASCENDING ORDER :
   'sort=duration,ratingsAverage'
Frontend should send req.query in this format for DESCENDING ORDER :
   'sort=-duration,-ratingsAverage'
3) Created LIMITING FIELDS feature in get API
Frontend should send req.query in this format to include only these 3 properties in response :
   '?fields=name,duration,difficulty'
Frontend should send req.query in this format to exclude only these 3 properties in response :
   'sort=-name,-duration,-difficulty'
4) Created PAGINATION feature in get API.
Frontend should send req.query in this format to get data of Page 2 which has 3 values only :
   '?page=2&limit=3'


Commit #3:
1) Created new route which will be called if none of the routes are matched.
2) Created Global Error Handling middleware.


Commit #4 :
1) Created User model.
2) Created Error Class.
3) Created userController.js , tourController.js . 
Moved code from userRoute.js to userController.js and tourRoute.js to tourController.js

Commit #5:
1) Added few properties in tourModel.js
2) Created reviewModel.js
3) Created a handleFactory.js to generalize the post,patch,delete functions