Commit #1:
1) Created Tour model with set of Business validations in Model/Tour.js file.
2) Created CRUD operation in routes/tourRoutes.js
3) Created app.js which is the file that will be hosted.


Commit #2 :
1) Created FILTERING feature in get API.
Frontend should send req.query in this format to filter data on duration and ratingsAverage : 
    '?duration=1&ratingsAverage[lte]=4.5'
2) Created SORTING feature in get API.
Frontend should send req.query in this format for ASCENDING ORDER :
   'sort=duration,ratingsAverage'
Frontend should send req.query in this format for DESCENDING ORDER :
   'sort=-duration,-ratingsAverage'
3) Created LIMITING FIELDS feature in get API
Frontend should send req.query in this format to include only these 3 properties in response :
   '?fields=name,duration,difficulty'
Frontend should send req.query in this format to exclude only these 3 properties in response :
   'sort=-name,-duration,-difficulty'
4) Created PAGINATION feature in get API.
Frontend should send req.query in this format to get data of Page 2 which has 3 values only :
   '?page=2&limit=3'


Commit #3:
1) Created new route which will be called if none of the routes are matched.
2) Created Global Error Handling middleware.


Commit #4 :
1) Created User model.
2) Created Error Class.
3) Created userController.js , tourController.js . 
Moved code from userRoute.js to userController.js and tourRoute.js to tourController.js

Commit #5:
1) Added few properties in tourModel.js
2) Created reviewModel.js
3) Created a handleFactory.js to generalize the post,patch,delete functions

Error Problem conclusion:-
Problem:- appserver not returning message property in response in production env 
         eg- In casterror, response was only status.
            Actual :- {"status":"fail"}
            Expected:- {"status":"fail","message":"Invalid _id : 5dcd5ba25b883711802e45"}

mistake 1:- In catchAsync utility, in catch block, i was passing "AppError" class obj instead of original "Error" class obj thrown by mongoose.
         hence the property like "name" of original "Error" class obj was not retained. Therefore the if block was not executing and app server was returning response without message prop.

mistake 2:- For errors like "No Document Found", I was creating "AppError" class object by passing message,statusCode ("No Document Found" , 404).
            In AppError im using super(message), this is adding message to Error object and appending properties like statusCode,status,isOperational.
            In errorController.js , I was using spread operator. This spread operator was not copying the message property.
            Hence, I removed spread operator.


Commit #6 :
1) Modified errorController.js and catchAsync.js as mentioned in above mistakes.
2) Modified reviewController.js . Checking If tour exists first, then only adding/updating/deleting review.
3) forgotPassword API is working now and is sending mails. resetPassword API is working now. 
Modified date comparision in findOne of resetPassword API. 


Commit #7 : 
1) Used SendGrid to send mail in production environment.

Commit #8 :
1) Added multer to store userModel's photo and tourModel's imageCover/images.
2) Added welcome.pug,passwordReset.pug templates for welcomeMail(),forgotPasswordMail() functions of utils/emails 

Commit #9:
1) Corrected Statuscode in protect route in call of new AppError().
2) Installed bcryptjs instead of bcrypt as bcrypt is causing issues in AWS. bcryptjs is compiled version of bcrypt.

Commit #10:
1) Storing images to AWS s3 bucket.

Commit #10:
1) Added pm2. It is production package manager which has inbuilt load balancer.
It allows to keep application alive forever, reloads app when crahsed and common system admin tasks like logging,stopping app and restarting.